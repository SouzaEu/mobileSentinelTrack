name: Deploy to Firebase App Distribution

on:
  # Desabilitado temporariamente - requer configura√ß√£o de secrets
  # push:
  #   branches: [main]
  #   tags: ['v*']
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'preview'
        type: choice
        options:
          - preview
          - production

env:
  NODE_VERSION: '18'

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup Expo CLI
        run: npm install -g @expo/cli eas-cli

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Determine build profile
        id: build-profile
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "profile=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            echo "profile=production" >> $GITHUB_OUTPUT
          else
            echo "profile=preview" >> $GITHUB_OUTPUT
          fi

      - name: Setup EAS
        run: |
          echo "Setting up EAS..."
          if [ -n "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "EXPO_TOKEN is available"
            eas whoami
          else
            echo "‚ö†Ô∏è EXPO_TOKEN not found in secrets"
          fi
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Build for Android
        run: |
          echo "Building for Android with profile: ${{ steps.build-profile.outputs.profile }}"
          eas build --platform android --profile ${{ steps.build-profile.outputs.profile }} --non-interactive --wait
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Get build URL
        id: build-url
        run: |
          build_url=$(eas build:list --platform android --limit 1 --json | jq -r '.[0].artifacts.buildUrl')
          echo "url=$build_url" >> $GITHUB_OUTPUT
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Download APK
        run: |
          curl -L "${{ steps.build-url.outputs.url }}" -o app.apk

      - name: Upload to Firebase App Distribution
        if: success()
        run: |
          if [ -n "${{ secrets.FIREBASE_TOKEN }}" ]; then
            echo "Uploading to Firebase App Distribution..."
            
            # Install Firebase CLI
            npm install -g firebase-tools
            
            # Deploy to Firebase App Distribution
            firebase appdistribution:distribute app.apk \
              --app "${{ secrets.FIREBASE_APP_ID }}" \
              --groups "testers" \
              --release-notes "Build from commit ${{ github.sha }}" \
              --token "${{ secrets.FIREBASE_TOKEN }}"
          else
            echo "‚ö†Ô∏è Firebase token not available, skipping distribution"
          fi

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v') && steps.build-profile.outputs.profile == 'production'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## Changes in this Release

            - Built from commit: ${{ github.sha }}
            - Build profile: ${{ steps.build-profile.outputs.profile }}
            - APK available in Firebase App Distribution

            ### Installation

            1. Download from Firebase App Distribution
            2. Install the APK on your Android device
            3. Follow the setup instructions in the app

          draft: false
          prerelease: false

      - name: Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "‚úÖ Deployment successful!"
            echo "Build profile: ${{ steps.build-profile.outputs.profile }}"
            echo "Commit: ${{ github.sha }}"
          else
            echo "‚ùå Deployment failed!"
          fi

  # Notify team on deployment
  notify:
    name: Notify Team
    runs-on: ubuntu-latest
    needs: deploy
    if: always()

    steps:
      - name: Deployment notification
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "üöÄ SentinelTrack deployed successfully!"
            echo "Version: ${{ github.ref_name }}"
            echo "Commit: ${{ github.sha }}"
            echo "Available in Firebase App Distribution"
          else
            echo "üí• SentinelTrack deployment failed!"
            echo "Check the logs for details"
          fi
